diff -ruN common/fs/overlayfs/util.c common_new/fs/overlayfs/util.c
--- common/fs/overlayfs/util.c	2025-01-23 19:17:37.000000000 +0800
+++ common_new/fs/overlayfs/util.c	2025-01-23 20:04:31.000000000 +0800
@@ -139,10 +139,7 @@
 
 bool ovl_dentry_weird(struct dentry *dentry)
 {
-	return dentry->d_flags & (DCACHE_NEED_AUTOMOUNT |
-				  DCACHE_MANAGE_TRANSIT |
-				  DCACHE_OP_HASH |
-				  DCACHE_OP_COMPARE);
+	return dentry->d_flags & (DCACHE_NEED_AUTOMOUNT | DCACHE_MANAGE_TRANSIT);
 }
 
 enum ovl_path_type ovl_path_type(struct dentry *dentry)
diff -ruN common/include/linux/sched/user.h common_new/include/linux/sched/user.h
--- common/include/linux/sched/user.h	2025-01-23 19:17:37.000000000 +0800
+++ common_new/include/linux/sched/user.h	2025-01-23 19:58:17.000000000 +0800
@@ -21,10 +21,6 @@
 #ifdef CONFIG_EPOLL
 	atomic_long_t epoll_watches; /* The number of file descriptors currently watched */
 #endif
-#ifdef CONFIG_POSIX_MQUEUE
-	/* protected by mq_lock	*/
-	unsigned long mq_bytes;	/* How many bytes can be allocated to mqueue? */
-#endif
 	unsigned long locked_shm; /* How many pages of mlocked shm ? */
 	unsigned long unix_inflight;	/* How many files in flight in unix sockets */
 	atomic_long_t pipe_bufs;  /* how many pages are allocated in pipe buffers */
@@ -43,10 +39,15 @@
 
 	/* Miscellaneous per-user rate limit */
 	struct ratelimit_state ratelimit;
-
+#ifdef CONFIG_POSIX_MQUEUE
+	ANDROID_KABI_USE(1, unsigned long mq_bytes);
+	ANDROID_KABI_RESERVE(2);
+	ANDROID_OEM_DATA_ARRAY(1, 2);
+#else
 	ANDROID_KABI_RESERVE(1);
 	ANDROID_KABI_RESERVE(2);
 	ANDROID_OEM_DATA_ARRAY(1, 2);
+#endif
 };
 
 extern int uids_sysfs_init(void);
diff -ruN common/include/linux/sched.h common_new/include/linux/sched.h
--- common/include/linux/sched.h	2025-01-23 19:17:37.000000000 +0800
+++ common_new/include/linux/sched.h	2025-01-23 19:56:36.000000000 +0800
@@ -968,10 +968,6 @@
 
 	struct nameidata		*nameidata;
 
-#ifdef CONFIG_SYSVIPC
-	struct sysv_sem			sysvsem;
-	struct sysv_shm			sysvshm;
-#endif
 #ifdef CONFIG_DETECT_HUNG_TASK
 	unsigned long			last_switch_count;
 	unsigned long			last_switch_time;
@@ -1388,10 +1384,14 @@
 	ANDROID_KABI_RESERVE(3);
 	ANDROID_KABI_RESERVE(4);
 	ANDROID_KABI_RESERVE(5);
+#ifdef CONFIG_SYSVIPC
+	ANDROID_KABI_USE(6, struct sysv_sem sysvsem);
+	_ANDROID_KABI_REPLACE(ANDROID_KABI_RESERVE(7); ANDROID_KABI_RESERVE(8), struct sysv_shm sysvshm);
+#else
 	ANDROID_KABI_RESERVE(6);
 	ANDROID_KABI_RESERVE(7);
 	ANDROID_KABI_RESERVE(8);
-
+#endif
 	/*
 	 * New fields for task_struct should be added above here, so that
 	 * they are included in the randomized portion of task_struct.
diff -ruN common/kernel/cgroup/cgroup.c common_new/kernel/cgroup/cgroup.c
--- common/kernel/cgroup/cgroup.c	2025-01-23 19:17:38.000000000 +0800
+++ common_new/kernel/cgroup/cgroup.c	2025-01-23 20:01:27.000000000 +0800
@@ -4012,7 +4012,10 @@
 		cfile->kn = kn;
 		spin_unlock_irq(&cgroup_file_kn_lock);
 	}
-
+	if (cft->ss && (cgrp->root->flags & CGRP_ROOT_NOPREFIX) && !(cft->flags & CFTYPE_NO_PREFIX)) {
+		snprintf(name, CGROUP_FILE_NAME_MAX, "%s.%s", cft->ss->name, cft->name);
+		kernfs_create_link(cgrp->kn, name, kn);
+	}
 	return 0;
 }
 
diff -ruN common/kernel/module.c common_new/kernel/module.c
--- common/kernel/module.c	2025-01-23 19:17:38.000000000 +0800
+++ common_new/kernel/module.c	2025-01-23 19:59:07.000000000 +0800
@@ -1371,7 +1371,7 @@
 bad_version:
 	pr_warn("%s: disagrees about version of symbol %s\n",
 	       info->name, symname);
-	return 0;
+	return 1;
 }
 
 static inline int check_modstruct_version(const struct load_info *info,
diff -ruN common/run.sh common_new/run.sh
--- common/run.sh	2025-01-23 19:20:10.000000000 +0800
+++ common_new/run.sh	2025-01-24 09:45:35.721102909 +0800
@@ -15,6 +15,10 @@
 make clean; rm -rf out; mkdir out
 make -j$(nproc) -C $PWD O=$PWD/out yun_gki_defconfig
 ./scripts/config --file out/.config \
-    -d UH -d RKP -d KDP -d SECURITY_DEFEX \
-    -d INTEGRITY -d FIVE -d TRIM_UNUSED_KSYMS
+    -d UH -d RKP -d KDP -d SECURITY_DEFEX -d INTEGRITY -d FIVE -d TRIM_UNUSED_KSYMS \
+    -e SYSVIPC -e POSIX_MQUEUE -e CGROUP_DEVICE -e PID_NS -e USER_NS -e IP_VS -e VT \
+    -e BT_HCIVHCI -e NETFILTER_XT_TARGET_CHECKSUM -e NETFILTER_XT_MATCH_ADDRTYPE \
+    -e IP6_NF_TARGET_MASQUERADE -e DEVTMPFS -e NULL_TTY -e NETFILTER_XT_MATCH_IPVS \
+    -e BRIDGE_NETFILTER -e IP6_NF_NAT -d MODULE_SCMVERSION
+make -j$(nproc) -C $PWD O=$PWD/out olddefconfig
 make -j$(nproc) -C $PWD O=$PWD/out
